{"version":3,"sources":["components/SearchForm/SearchForm.js","components/ResultList/ResultList.js","utils/API.js","components/Container/Container.js","components/SearchResultContainer.js","components/Jumbotron/Jumbotron.js","App.js","index.js"],"names":["SearchForm","props","className","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","ResultList","employees","results","employeeRows","filter","employee","first","toLowerCase","includes","last","map","style","textAlign","alt","src","picture","medium","email","cell","scope","API","axios","get","Container","children","SearchResultContainer","state","searchEmployees","then","res","setState","data","catch","err","console","log","event","target","preventDefault","this","Component","Jumbotron","title","subtext","App","ReactDOM","render","document","getElementById"],"mappings":"wRAyBeA,MAtBf,SAAoBC,GAClB,OACI,+BACE,sBAAKC,UAAU,yBAAf,UACE,uBAAOC,QAAQ,SAAf,qBACA,uBACEC,SAAUH,EAAMI,kBAChBC,MAAOL,EAAMM,OACbC,KAAK,SACLC,KAAK,OACLP,UAAU,eACVQ,YAAY,uBACZC,GAAG,WAEL,wBAAQC,QAASX,EAAMY,iBAAkBX,UAAU,uBAAnD,0BCsBKY,MArCf,SAAoBb,GAClB,IAAIc,EAAYd,EAAMe,QAMlBC,GAJJF,EAAaA,EAAUG,QAAO,SAACC,GAAD,OAAyF,IAA3EA,EAASX,KAAKY,MAAMC,cAAcC,SAASrB,EAAMM,OAAOc,iBACkB,IAA1EF,EAASX,KAAKe,KAAKF,cAAcC,SAASrB,EAAMM,OAAOc,mBAGtEG,KAAI,SAAAL,GAAQ,OACvC,+BACE,oBAAIM,MAAO,CAACC,UAAW,UAAvB,SAAmC,qBAAKC,IAAKR,EAASX,KAAKe,KAAMrB,UAAU,YAAY0B,IAAKT,EAASU,QAAQC,WAC7G,6BAAKX,EAASX,KAAKY,QACnB,6BAAKD,EAASX,KAAKe,OACnB,6BAAKJ,EAASY,QACd,6BAAKZ,EAASa,SALPb,EAASa,SASlB,OAEE,cADA,CACA,SAAO9B,UAAU,mCAAjB,UACI,gCACE,+BACE,oBAAIuB,MAAO,CAACC,UAAW,UAAWO,MAAM,MAAxC,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,6BAGJ,gCAEGhB,Q,iBCpBEiB,EAPH,CACV3B,OAAQ,WACN,OAAO4B,IAAMC,IALD,+E,MCQDC,MARf,SAAmBpC,GACf,OACI,qBAAKC,UAAU,6BAAf,SACKD,EAAMqC,YC+CJC,E,4MA9CbC,MAAQ,CACNjC,OAAQ,GACRS,QAAS,I,EAQXyB,gBAAkB,WAChBP,EAAI3B,SACDmC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAE5B,QAAS2B,EAAIE,KAAK7B,aAC9C8B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAG9B1C,kBAAoB,SAAA6C,GAClB,IAAM1C,EAAO0C,EAAMC,OAAO3C,KACpBF,EAAQ4C,EAAMC,OAAO7C,MAC3B,EAAKsC,SAAL,eACGpC,EAAOF,K,EAKZO,iBAAmB,SAAAqC,GACjBA,EAAME,iBACN,EAAKX,mB,uDArBP,WACEY,KAAKZ,oB,oBAuBP,WACE,OACA,mCACE,eAAC,EAAD,WACE,cAAC,EAAD,CACElC,OAAQ8C,KAAKb,MAAMjC,OACnBM,iBAAkBwC,KAAKxC,iBACvBR,kBAAmBgD,KAAKhD,oBAE1B,cAAC,EAAD,CAAYE,OAAQ8C,KAAKb,MAAMjC,OAAQS,QAASqC,KAAKb,MAAMxB,mB,GAxC/BsC,a,MCQrBC,MAXf,SAAmBtD,GACjB,OACA,qBAAKC,UAAU,yBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BD,EAAMuD,QACjC,mBAAGtD,UAAU,OAAb,SAAqBD,EAAMwD,gBCMlBC,MAVf,WACE,OACE,qCACE,cAAC,EAAD,CAAWF,MAAM,qBAAqBC,QAAQ,wDAC9C,cAAC,EAAD,Q,MCHNE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cea8326d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n      <form>\r\n        <div className=\"form-group custom-form\">\r\n          <label htmlFor=\"search\">Search:</label>\r\n          <input\r\n            onChange={props.handleInputChange}\r\n            value={props.search}\r\n            name=\"search\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search for employees\"\r\n            id=\"search\"\r\n          />\r\n          <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\nfunction ResultList(props) {\r\n  let employees = props.results;\r\n\r\n  employees  = employees.filter((employee) => employee.name.first.toLowerCase().includes(props.search.toLowerCase()) === true || \r\n                                              employee.name.last.toLowerCase().includes(props.search.toLowerCase()) === true);\r\n \r\n  // map employees results array into table rows\r\n  let employeeRows = employees.map(employee => (\r\n    <tr key={employee.cell}>      \r\n      <td style={{textAlign: \"center\"}}>{<img alt={employee.name.last} className=\"img-fluid\" src={employee.picture.medium} />}</td>\r\n      <td>{employee.name.first}</td>\r\n      <td>{employee.name.last}</td>\r\n      <td>{employee.email}</td>\r\n      <td>{employee.cell}</td>\r\n    </tr>\r\n    ));\r\n\r\n    return (\r\n      // create header for table\r\n      <table className=\"table table-bordered table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{textAlign: \"center\"}} scope=\"col\">Image</th>\r\n              <th scope=\"col\">First</th>\r\n              <th scope=\"col\">Last</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Cell Phone</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* add rows */}\r\n            {employeeRows}\r\n          </tbody>\r\n      </table>\r\n  );\r\n}\r\n\r\nexport default ResultList;\r\n","import axios from \"axios\";\r\n\r\n// Set the BASEURL to point at the randomuser API to return 100 records\r\nconst BASEURL = \"https://randomuser.me/api/?inc=name,email,picture,cell&nat=us&results=100\";\r\n\r\n// Set API to search the randomuser API\r\nconst API = {\r\n  search: function() {\r\n    return axios.get(BASEURL);\r\n  }\r\n};\r\n\r\n// export API\r\nexport default API;\r\n","import React from 'react'\r\nimport \"./styles.css\";\r\n\r\nfunction Container(props) {\r\n    return (\r\n        <div className=\"container custom-container\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React, { Component } from \"react\";\r\nimport SearchForm from \"./SearchForm/SearchForm\";\r\nimport ResultList from \"./ResultList/ResultList\";\r\nimport API from \"../utils/API\";\r\nimport Container from \"./Container/Container\";\r\n\r\nclass SearchResultContainer extends Component {\r\n  state = {\r\n    search: \"\",\r\n    results: []\r\n  };\r\n\r\n  // When this component mounts, search the randomuser API for sample employees\r\n  componentDidMount() {\r\n    this.searchEmployees();\r\n  }\r\n\r\n  searchEmployees = () => {\r\n    API.search()\r\n      .then(res => this.setState({ results: res.data.results }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  // When the form is submitted, search the randomuser API for `this.state.search`\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.searchEmployees();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <>\r\n      <Container>\r\n        <SearchForm\r\n          search={this.state.search}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <ResultList search={this.state.search} results={this.state.results} />\r\n      </Container>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResultContainer;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction Jumbotron(props) {\r\n  return (\r\n  <div className=\"jumbotron custom-jumbo\">\r\n    <div className=\"container\">\r\n      <h1 className=\"display-4\">{props.title}</h1>\r\n      <p className=\"lead\">{props.subtext}</p>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport SearchResultContainer from \"./components/SearchResultContainer\";\r\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\r\n\r\nfunction App() {\r\n  return(\r\n    <>\r\n      <Jumbotron title=\"Employee Directory\" subtext=\"Enter search criteria to find and filter employees.\"/>\r\n      <SearchResultContainer />\r\n    </>\r\n    );\r\n    \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}